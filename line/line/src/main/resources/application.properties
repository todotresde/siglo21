# ===============================
# = SERVER
# ===============================
server.port=8080

# ===============================
# = SECURITY
# ===============================
security.ignored=/**
# security.user.password=password

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "line"
spring.datasource.url = jdbc:mysql://localhost:3306/system-line?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password =

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Load data.sql
spring.datasource.initialize = false

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Log
# logging.level.org.springframework.web = DEBUG
# Show sql parameters
# logging.level.org.hibernate.type=TRACE

# ===============================
# = SPRING CLOUD
# ===============================
spring.application.name: line-service

# Discovery Server Access
eureka.client.serviceUrl.defaultZone: http://localhost:1111/eureka/